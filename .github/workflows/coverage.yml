name: Coverage Report

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        buildtype: [Debug]

    runs-on: ubuntu-latest
    name: Coverage Report ${{ matrix.buildtype }} mode
    container:
      image: caiotoledo/imu-rpc:latest

    env:
      TIMEOUT_UNITTEST: 5

    steps:
      - name: Install dependencies
        run: |
          apt update -qq
          apt install valgrind -y
          apt install gcovr lcov curl -y

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Project ${{ matrix.buildtype }} mode
        run: |
          mkdir -p .build_${{ matrix.buildtype }}/ && cd .build_${{ matrix.buildtype }}/
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DBUILD_UNITTEST=1 -DTIMEOUT_UNITTEST=$TIMEOUT_UNITTEST -DENABLE_COVERAGE=1 ../
          make -j$(nproc)

      - name: Initialize Coverage data
        run: |
          mkdir -p .coverage_${{ matrix.buildtype }}/
          lcov -rc lcov_branch_coverage=1 --zerocounters --directory .
          lcov -rc lcov_branch_coverage=1 --capture --initial --directory . --output-file .coverage_${{ matrix.buildtype }}/coverage_base.info

      - name: Run Unit Test
        run: |
          cd .build_${{ matrix.buildtype }}/
          ctest -j$(nproc) --verbose

      - name: Generate Coverage Report
        run: |
          lcov --rc lcov_branch_coverage=1 --capture --directory . --output-file .coverage_${{ matrix.buildtype }}/coverage.info
          lcov --rc lcov_branch_coverage=1 --add-tracefile .coverage_${{ matrix.buildtype }}/coverage_base.info --add-tracefile .coverage_${{ matrix.buildtype }}/coverage.info --output-file .coverage_${{ matrix.buildtype }}/coverage.info
          lcov --rc lcov_branch_coverage=1 --remove .coverage_${{ matrix.buildtype }}/coverage.info '/usr/*' --output-file .coverage_${{ matrix.buildtype }}/coverage.info
          lcov --rc lcov_branch_coverage=1 --remove .coverage_${{ matrix.buildtype }}/coverage.info '*tests/*' --output-file .coverage_${{ matrix.buildtype }}/coverage.info
          lcov --rc lcov_branch_coverage=1 --remove .coverage_${{ matrix.buildtype }}/coverage.info '*gtest_mocks/*' --output-file .coverage_${{ matrix.buildtype }}/coverage.info
          lcov --rc lcov_branch_coverage=1 --list .coverage_${{ matrix.buildtype }}/coverage.info

      - uses: codecov/codecov-action@v1
        with:
          flags: unittests
          files: .coverage_${{ matrix.buildtype }}/coverage.info
          path_to_write_report: .coverage_${{ matrix.buildtype }}/coverage_report.txt
          verbose: true
          fail_ci_if_error: true
