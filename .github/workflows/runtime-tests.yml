name: Runtime Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        buildtype: [Debug, Release]

    runs-on: ubuntu-latest
    name: Build Project ${{ matrix.buildtype }}
    container:
      image: caiotoledo/imu-rpc:latest

    env:
      IP: localhost
      PORT: 1111
      TEST_TIME: 1

    steps:
      - uses: actions/checkout@v2

      - name: Create artifact folder
        run: |
          mkdir -p .install_${{ matrix.buildtype }}

      - name: Build Project
        run: |
          mkdir -p .build_${{ matrix.buildtype }}/ && cd .build_${{ matrix.buildtype }}/
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DCMAKE_INSTALL_PREFIX=../.install_${{ matrix.buildtype }}/ ../
          make -j$(nproc)
          sudo make install
          cd ../

      - uses: actions/upload-artifact@v2
        with:
          name: binaries-${{ matrix.buildtype }}
          path: .install_${{ matrix.buildtype }}
          retention-days: 1

  test:
    needs: build
    strategy:
      matrix:
        buildtype: [Debug, Release]
        samplerate: [10,20,50,100,200,500]
        gyroscale: [250,500,1000,2000]
        accelscale: [2,4,8,16]

    runs-on: ubuntu-latest
    name: Test Application ${{ matrix.buildtype }} - SampleRate ${{ matrix.samplerate }} ms - AccelScale ${{ matrix.accelscale }} mG - GyroScale ${{ matrix.gyroscale }} Â°/s
    container:
      image: caiotoledo/dbuscxx:0.12.0

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: binaries-${{ matrix.buildtype }}
          path: .install_${{ matrix.buildtype }}

      - name: Install binaries from artifact
        run: |
          find .install_${{ matrix.buildtype }}/ -type f | xargs -I{} chmod +x "{}"
          cp -rv .install_${{ matrix.buildtype }}/* /usr/
          sudo ldconfig

      - name: Install dependencies
        run: |
          python3 -m pip install -r script/requirements.txt

      - name: Simple Application Test
        run: |
          imu-daemon --version
          imu-daemon --help
          imu-cli --version
          imu-cli --help
          imu-socket --version
          imu-socket --help
          python3 script/imu-dbus.py --version
          python3 script/imu-dbus.py --help

      - name: Test Application
        run: |
          eval `dbus-launch --sh-syntax`
          imu-daemon -d -a${{ matrix.accelscale }} -g${{ matrix.gyroscale }} -r${{ matrix.samplerate }}
          imu-socket -d -p $PORT
          imu-cli -a -c -g -e -t$TEST_TIME
          python3 script/imu-dbus.py -a $IP -p $PORT -t$TEST_TIME -d
          killall imu-socket
          killall imu-daemon
          sleep 1
